
package gestion;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "GestionPBG", targetNamespace = "http://gestion/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GestionPBG {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "initialisation", targetNamespace = "http://gestion/", className = "gestion.Initialisation")
    @ResponseWrapper(localName = "initialisationResponse", targetNamespace = "http://gestion/", className = "gestion.InitialisationResponse")
    public void initialisation();

    /**
     * 
     * @return
     *     returns java.util.List<gestion.Compte>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afficherComptes", targetNamespace = "http://gestion/", className = "gestion.AfficherComptes")
    @ResponseWrapper(localName = "afficherComptesResponse", targetNamespace = "http://gestion/", className = "gestion.AfficherComptesResponse")
    public List<Compte> afficherComptes();

    /**
     * 
     * @param mail
     * @return
     *     returns gestion.Compte
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercheCompte", targetNamespace = "http://gestion/", className = "gestion.RechercheCompte")
    @ResponseWrapper(localName = "rechercheCompteResponse", targetNamespace = "http://gestion/", className = "gestion.RechercheCompteResponse")
    public Compte rechercheCompte(
        @WebParam(name = "mail", targetNamespace = "")
        String mail);

    /**
     * 
     * @param prenom
     * @param mail
     * @param mdp
     * @param nom
     * @return
     *     returns gestion.Compte
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajoutCompte", targetNamespace = "http://gestion/", className = "gestion.AjoutCompte")
    @ResponseWrapper(localName = "ajoutCompteResponse", targetNamespace = "http://gestion/", className = "gestion.AjoutCompteResponse")
    public Compte ajoutCompte(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "mdp", targetNamespace = "")
        String mdp);

    /**
     * 
     * @param prenom
     * @param mail
     * @param nom
     */
    @WebMethod
    @RequestWrapper(localName = "modifCompte", targetNamespace = "http://gestion/", className = "gestion.ModifCompte")
    @ResponseWrapper(localName = "modifCompteResponse", targetNamespace = "http://gestion/", className = "gestion.ModifCompteResponse")
    public void modifCompte(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "mail", targetNamespace = "")
        String mail);

    /**
     * 
     * @param mail
     * @param mdp
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifMdpCompte", targetNamespace = "http://gestion/", className = "gestion.ModifMdpCompte")
    @ResponseWrapper(localName = "modifMdpCompteResponse", targetNamespace = "http://gestion/", className = "gestion.ModifMdpCompteResponse")
    public String modifMdpCompte(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "mdp", targetNamespace = "")
        String mdp);

    /**
     * 
     * @param mail
     */
    @WebMethod
    @RequestWrapper(localName = "supprCompte", targetNamespace = "http://gestion/", className = "gestion.SupprCompte")
    @ResponseWrapper(localName = "supprCompteResponse", targetNamespace = "http://gestion/", className = "gestion.SupprCompteResponse")
    public void supprCompte(
        @WebParam(name = "mail", targetNamespace = "")
        String mail);

    /**
     * 
     * @param mail
     * @param mdp
     * @return
     *     returns gestion.Compte
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexion", targetNamespace = "http://gestion/", className = "gestion.Connexion")
    @ResponseWrapper(localName = "connexionResponse", targetNamespace = "http://gestion/", className = "gestion.ConnexionResponse")
    public Compte connexion(
        @WebParam(name = "mail", targetNamespace = "")
        String mail,
        @WebParam(name = "mdp", targetNamespace = "")
        String mdp);

    /**
     * 
     * @param compte
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "compteValide", targetNamespace = "http://gestion/", className = "gestion.CompteValide")
    @ResponseWrapper(localName = "compteValideResponse", targetNamespace = "http://gestion/", className = "gestion.CompteValideResponse")
    public boolean compteValide(
        @WebParam(name = "compte", targetNamespace = "")
        Compte compte);

    /**
     * 
     * @param mail
     */
    @WebMethod
    @RequestWrapper(localName = "setAdmin", targetNamespace = "http://gestion/", className = "gestion.SetAdmin")
    @ResponseWrapper(localName = "setAdminResponse", targetNamespace = "http://gestion/", className = "gestion.SetAdminResponse")
    public void setAdmin(
        @WebParam(name = "mail", targetNamespace = "")
        String mail);

    /**
     * 
     * @param compte
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isAdmin", targetNamespace = "http://gestion/", className = "gestion.IsAdmin")
    @ResponseWrapper(localName = "isAdminResponse", targetNamespace = "http://gestion/", className = "gestion.IsAdminResponse")
    public boolean isAdmin(
        @WebParam(name = "compte", targetNamespace = "")
        Compte compte);

    /**
     * 
     * @return
     *     returns java.util.List<gestion.Event>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afficherEvents", targetNamespace = "http://gestion/", className = "gestion.AfficherEvents")
    @ResponseWrapper(localName = "afficherEventsResponse", targetNamespace = "http://gestion/", className = "gestion.AfficherEventsResponse")
    public List<Event> afficherEvents();

    /**
     * 
     * @param id
     * @return
     *     returns gestion.Event
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercheEvent", targetNamespace = "http://gestion/", className = "gestion.RechercheEvent")
    @ResponseWrapper(localName = "rechercheEventResponse", targetNamespace = "http://gestion/", className = "gestion.RechercheEventResponse")
    public Event rechercheEvent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @param description
     * @param image
     * @param date
     * @param nom
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajoutEvent", targetNamespace = "http://gestion/", className = "gestion.AjoutEvent")
    @ResponseWrapper(localName = "ajoutEventResponse", targetNamespace = "http://gestion/", className = "gestion.AjoutEventResponse")
    public boolean ajoutEvent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date,
        @WebParam(name = "image", targetNamespace = "")
        String image);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "supprEvent", targetNamespace = "http://gestion/", className = "gestion.SupprEvent")
    @ResponseWrapper(localName = "supprEventResponse", targetNamespace = "http://gestion/", className = "gestion.SupprEventResponse")
    public void supprEvent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @param image
     */
    @WebMethod
    @RequestWrapper(localName = "modifImageEvent", targetNamespace = "http://gestion/", className = "gestion.ModifImageEvent")
    @ResponseWrapper(localName = "modifImageEventResponse", targetNamespace = "http://gestion/", className = "gestion.ModifImageEventResponse")
    public void modifImageEvent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "image", targetNamespace = "")
        String image);

    /**
     * 
     * @param id
     * @param description
     * @param date
     * @param nom
     */
    @WebMethod
    @RequestWrapper(localName = "modifEvent", targetNamespace = "http://gestion/", className = "gestion.ModifEvent")
    @ResponseWrapper(localName = "modifEventResponse", targetNamespace = "http://gestion/", className = "gestion.ModifEventResponse")
    public void modifEvent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date);

    /**
     * 
     * @return
     *     returns java.util.List<gestion.Participant>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afficherParticipations", targetNamespace = "http://gestion/", className = "gestion.AfficherParticipations")
    @ResponseWrapper(localName = "afficherParticipationsResponse", targetNamespace = "http://gestion/", className = "gestion.AfficherParticipationsResponse")
    public List<Participant> afficherParticipations();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<gestion.Compte>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afficherParticipants", targetNamespace = "http://gestion/", className = "gestion.AfficherParticipants")
    @ResponseWrapper(localName = "afficherParticipantsResponse", targetNamespace = "http://gestion/", className = "gestion.AfficherParticipantsResponse")
    public List<Compte> afficherParticipants(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "ajouterParticipation", targetNamespace = "http://gestion/", className = "gestion.AjouterParticipation")
    @ResponseWrapper(localName = "ajouterParticipationResponse", targetNamespace = "http://gestion/", className = "gestion.AjouterParticipationResponse")
    public void ajouterParticipation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
